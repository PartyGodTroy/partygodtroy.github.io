---

---
<div class="code-editor sl-theme-dark" id="editor-wrapper">
    <slot name="resources">
        <script defer type="module" src="https://cdn.jsdelivr.net/npm/monaco-editor@0.39.0/+esm"></script>
		<link href="https://cdn.jsdelivr.net/npm/vscode-codicons@0.0.17/dist/codicon.min.css" rel="stylesheet">
    </slot>
    <div style="display:none" id={`template-${Astro.props.id}`}>
        <slot></slot>
    </div>
    <div>
        <div>
            <sl-button title="Run button" onclick={`editor_${Astro.props.id}.execute()`}>Run</sl-button>
            <sl-button title="copy code" onclick={`navigator.clipboard.writeText(editor_${Astro.props.id}.getValue())`} >Copy</sl-button>
            <sl-button title="Run Full Screen" onclick={`editor_${Astro.props.id}.runFullscreen()`} >Run Fullscreen</sl-button> 
        </div>
        

        <sl-split-panel vertical style="--divider-width: 20px;">
            <div slot="start">
                <div class="rounded-md border-2 min-h-full" id={`editor-output-${Astro.props.id}`}>
                    <slot name="output"></slot>
                </div>
            </div>
            <sl-icon slot="divider" name="grip-vertical"></sl-icon>
            <div slot="end" class="h-full max-w-full">
                <div class="monaco min-h-full" id={Astro.props.id} class:list={Astro.props.class}></div>
            </div>
          </sl-split-panel>
          
    </div>
</div>
<script defer type="module" 
    define:vars={
        {
            elId:Astro.props.id,
            language:Astro.props.language ?? 'javascript', 
            autoRun: Astro.props.autoRun ?? true, 
            readOnly:Astro.props.readOnly ?? false,
            noOuput: Astro.props.noOutput ?? false
        }
}>

import * as monaco from 'https://cdn.jsdelivr.net/npm/monaco-editor@0.39.0/+esm';
var currentScript = document.currentScript;
document.addEventListener('DOMContentLoaded', () => {
    const template = document.getElementById(`template-${elId}`).querySelector('code');   
    const output = document.getElementById(`editor-output-${elId}`);
    const value = template?.innerHTML.replaceAll('&gt;', '>').replace('&lt;', '<');
    // lines of code to added befor the input code
    const inject = language === 'javascript'
        ? [`const outputEl = document.getElementById('${output.id}');`]
        : [];

    const editor = monaco.editor.create(document.querySelector(`#${elId}`),{
        theme:'vs-dark',
        language,
        value:value ?? '',
        readOnly
    })
    const execute = () => {
            const value = `${inject.join('\n')} ${editor.getValue()}`;
            const script = new Function(value);
            Promise.resolve((async () => {
                script();
             })())
        .catch(console.warn)
        .then(console.log);

        }
    
    const runFullscreen = () => {
        Promise.resolve((async () => {
            output.requestFullscreen({
            navigationUI: 'show'
        })
             })())
        
    }


    const codeEditor = {
        editor,
        getValue: () => editor.getValue(),
        setValue: (value) => editor.setValue(value),
        execute,
        output,
        runFullscreen
      
    }
    if (autoRun && value){
        execute();
      
    }

    window[`editor_${elId}`] = codeEditor;
});
</script>
